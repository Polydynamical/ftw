class
 refid "Misc:g"
 instance QName(PackageNamespace("Misc"), "g")
  extends QName(PackageNamespace(""), "Object")
  flag SEALED
  flag PROTECTEDNS
  protectedns ProtectedNamespace("Misc:g")
  iinit
   refid "Misc:g/instance/init"
   param QName(PackageNamespace("flash.display"), "MovieClip")
   body
    maxstack 2
    localcount 2
    initscopedepth 4
    maxscopedepth 5
    code
     getlocal0
     pushscope

     getlocal0
     constructsuper      0

     findproperty        QName(PackageNamespace(""), "server")
     findpropstrict      QName(PackageNamespace("Misc"), "Server")
     constructprop       QName(PackageNamespace("Misc"), "Server"), 0
     setproperty         QName(PackageNamespace(""), "server")

     findproperty        QName(PackageNamespace(""), "initialMemoryUsage")
     getlex              QName(PackageNamespace("flash.system"), "System")
     getproperty         QName(PackageNamespace(""), "totalMemory")
     setproperty         QName(PackageNamespace(""), "initialMemoryUsage")

     getlex              QName(PackageNamespace("Misc"), "g")
     getlocal1
     getproperty         QName(PackageNamespace(""), "stage")
     getproperty         QName(PackageNamespace(""), "stageWidth")
     setproperty         QName(PackageNamespace(""), "stageWidth")

     getlex              QName(PackageNamespace("Misc"), "g")
     getlocal1
     getproperty         QName(PackageNamespace(""), "stage")
     getproperty         QName(PackageNamespace(""), "stageHeight")
     setproperty         QName(PackageNamespace(""), "stageHeight")

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; instance
 cinit
  refid "Misc:g/class/init"
  body
   maxstack 3
   localcount 1
   initscopedepth 3
   maxscopedepth 4
   code
    getlocal0
    pushscope

    findproperty        QName(PackageNamespace(""), "version")
    pushstring          "2018-03-28 4:00pm"
    setproperty         QName(PackageNamespace(""), "version")

    findproperty        QName(PackageNamespace(""), "auxiliary")
    pushstring          "Auxiliary"
    setproperty         QName(PackageNamespace(""), "auxiliary")

    findproperty        QName(PackageNamespace(""), "manager")
    pushstring          "Manager"
    setproperty         QName(PackageNamespace(""), "manager")

    findproperty        QName(PackageNamespace(""), "host")
    pushstring          "www.artofproblemsolving.com"
    setproperty         QName(PackageNamespace(""), "host")

    findproperty        QName(PackageNamespace(""), "remote")
    pushstring          "www.artofproblemsolving.com"
    setproperty         QName(PackageNamespace(""), "remote")

    findproperty        QName(PackageNamespace(""), "root")
    pushstring          "/m/ftw/"
    setproperty         QName(PackageNamespace(""), "root")

    findproperty        QName(PackageNamespace(""), "URLPath")
    pushstring          "http://"
    getlex              QName(PackageNamespace(""), "host")
    add
    getlex              QName(PackageNamespace(""), "root")
    add
    setproperty         QName(PackageNamespace(""), "URLPath")

    findproperty        QName(PackageNamespace(""), "phpPath")
    getlex              QName(PackageNamespace(""), "URLPath")
    pushstring          "PHP/"
    add
    setproperty         QName(PackageNamespace(""), "phpPath")

    findproperty        QName(PackageNamespace(""), "latexPath")
    pushstring          "http://www.artofproblemsolving.com/Edutainment/as3/GameImages/"
    setproperty         QName(PackageNamespace(""), "latexPath")

    findproperty        QName(PackageNamespace(""), "port")
    pushshort           9898
    setproperty         QName(PackageNamespace(""), "port")

    findproperty        QName(PackageNamespace(""), "ip")
    pushstring          "127.0.0.1"
    setproperty         QName(PackageNamespace(""), "ip")

    findproperty        QName(PackageNamespace(""), "user")
    findpropstrict      QName(PackageNamespace("Type"), "User")
    constructprop       QName(PackageNamespace("Type"), "User"), 0
    setproperty         QName(PackageNamespace(""), "user")

    findproperty        QName(PackageNamespace(""), "game")
    findpropstrict      QName(PackageNamespace("Type"), "FTW")
    constructprop       QName(PackageNamespace("Type"), "FTW"), 0
    setproperty         QName(PackageNamespace(""), "game")

    findproperty        QName(PackageNamespace(""), "replay")
    pushnull
    setproperty         QName(PackageNamespace(""), "replay")

    findproperty        QName(PrivateNamespace(null, "Misc:g/class"), "defaultZoneName")
    pushstring          "FTW"
    setproperty         QName(PrivateNamespace(null, "Misc:g/class"), "defaultZoneName")

    findproperty        QName(PrivateNamespace(null, "Misc:g/class"), "_activeZoneName")
    getlocal0
    getproperty         QName(PrivateNamespace(null, "Misc:g/class"), "defaultZoneName")
    setproperty         QName(PrivateNamespace(null, "Misc:g/class"), "_activeZoneName")

    findproperty        QName(PrivateNamespace(null, "Misc:g/class"), "_activeRoomName")
    pushstring          "Lobby"
    setproperty         QName(PrivateNamespace(null, "Misc:g/class"), "_activeRoomName")

    findproperty        QName(PackageNamespace(""), "away")
    pushfalse
    setproperty         QName(PackageNamespace(""), "away")

    findproperty        QName(PackageNamespace(""), "debug")
    pushtrue
    setproperty         QName(PackageNamespace(""), "debug")

    returnvoid
   end ; code
  end ; body
 end ; method
 trait slot QName(PackageNamespace(""), "version") slotid 1 type QName(PackageNamespace(""), "String") value Utf8("2018-03-28 4:00pm") end
 trait slot QName(PackageNamespace(""), "auxiliary") slotid 2 type QName(PackageNamespace(""), "String") value Utf8("Auxiliary") end
 trait slot QName(PackageNamespace(""), "manager") slotid 3 type QName(PackageNamespace(""), "String") value Utf8("Manager") end
 trait slot QName(PackageNamespace(""), "scene") slotid 4 type QName(PackageNamespace("Scene"), "Manager") end
 trait slot QName(PackageNamespace(""), "host") slotid 5 type QName(PackageNamespace(""), "String") value Utf8("www.artofproblemsolving.com") end
 trait slot QName(PackageNamespace(""), "remote") slotid 6 type QName(PackageNamespace(""), "String") value Utf8("www.artofproblemsolving.com") end
 trait slot QName(PackageNamespace(""), "root") slotid 7 type QName(PackageNamespace(""), "String") value Utf8("/m/ftw/") end
 trait slot QName(PackageNamespace(""), "URLPath") slotid 8 type QName(PackageNamespace(""), "String") end
 trait slot QName(PackageNamespace(""), "phpPath") slotid 9 type QName(PackageNamespace(""), "String") end
 trait slot QName(PackageNamespace(""), "latexPath") slotid 10 type QName(PackageNamespace(""), "String") value Utf8("http://www.artofproblemsolving.com/Edutainment/as3/GameImages/") end
 trait slot QName(PackageNamespace(""), "stageWidth") slotid 11 type QName(PackageNamespace(""), "int") end
 trait slot QName(PackageNamespace(""), "stageHeight") slotid 12 type QName(PackageNamespace(""), "int") end
 trait slot QName(PackageNamespace(""), "port") slotid 13 type QName(PackageNamespace(""), "int") value Integer(9898) end
 trait slot QName(PackageNamespace(""), "ip") slotid 14 type QName(PackageNamespace(""), "String") value Utf8("127.0.0.1") end
 trait slot QName(PackageNamespace(""), "user") slotid 15 type QName(PackageNamespace("Type"), "User") end
 trait slot QName(PackageNamespace(""), "game") slotid 16 type QName(PackageNamespace("Type"), "FTW") end
 trait slot QName(PackageNamespace(""), "replay") slotid 17 type QName(PackageNamespace("Type"), "FTW") value Null() end
 trait slot QName(PrivateNamespace(null, "Misc:g/class"), "defaultZoneName") slotid 18 type QName(PackageNamespace(""), "String") value Utf8("FTW") end
 trait slot QName(PrivateNamespace(null, "Misc:g/class"), "_activeZoneName") slotid 19 type QName(PackageNamespace(""), "String") end
 trait slot QName(PrivateNamespace(null, "Misc:g/class"), "_activeRoomName") slotid 20 type QName(PackageNamespace(""), "String") value Utf8("Lobby") end
 trait slot QName(PackageNamespace(""), "server") slotid 21 type QName(PackageNamespace("Misc"), "Server") end
 trait slot QName(PackageNamespace(""), "chat") slotid 22 type QName(PackageNamespace("Misc"), "Chat") end
 trait slot QName(PackageNamespace(""), "initialMemoryUsage") slotid 23 type QName(PackageNamespace(""), "uint") end
 trait slot QName(PackageNamespace(""), "away") slotid 24 type QName(PackageNamespace(""), "Boolean") value False() end
 trait slot QName(PackageNamespace(""), "debug") slotid 25 type QName(PackageNamespace(""), "Boolean") value True() end
 trait setter QName(PackageNamespace(""), "activeZoneName") flag FINAL dispid 3
  method
   refid "Misc:g/class/activeZoneName/setter"
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "void")
   body
    maxstack 2
    localcount 2
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("Misc"), "g")
     getlocal1
     setproperty         QName(PrivateNamespace(null, "Misc:g/class"), "_activeZoneName")

     getlex              QName(PackageNamespace("Misc"), "g")
     getproperty         QName(PackageNamespace(""), "chat")
     getlocal1
     setproperty         QName(PackageNamespace(""), "activeZoneName")

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; trait
 trait setter QName(PackageNamespace(""), "activeRoomName") flag FINAL dispid 4
  method
   refid "Misc:g/class/activeRoomName/setter"
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "void")
   body
    maxstack 2
    localcount 2
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("Misc"), "g")
     getlocal1
     setproperty         QName(PrivateNamespace(null, "Misc:g/class"), "_activeRoomName")

     getlex              QName(PackageNamespace("Misc"), "g")
     getproperty         QName(PackageNamespace(""), "chat")
     getlocal1
     setproperty         QName(PackageNamespace(""), "activeRoomName")

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; trait
 trait getter QName(PackageNamespace(""), "activeZoneName") flag FINAL dispid 5
  method
   refid "Misc:g/class/activeZoneName/getter"
   returns QName(PackageNamespace(""), "String")
   body
    maxstack 1
    localcount 1
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("Misc"), "g")
     getproperty         QName(PrivateNamespace(null, "Misc:g/class"), "_activeZoneName")
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait getter QName(PackageNamespace(""), "activeRoomName") flag FINAL dispid 6
  method
   refid "Misc:g/class/activeRoomName/getter"
   returns QName(PackageNamespace(""), "String")
   body
    maxstack 1
    localcount 1
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("Misc"), "g")
     getproperty         QName(PrivateNamespace(null, "Misc:g/class"), "_activeRoomName")
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "debuglog") flag FINAL dispid 7
  method
   refid "Misc:g/class/debuglog"
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "void")
   body
    maxstack 2
    localcount 2
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("Misc"), "g")
     getproperty         QName(PackageNamespace(""), "chat")
     convert_b
     dup
     iffalse             L11

     pop
     getlex              QName(PackageNamespace("Misc"), "g")
     getproperty         QName(PackageNamespace(""), "debug")
     convert_b
L11:
     iffalse             L16

     getlex              QName(PackageNamespace("Misc"), "g")
     getproperty         QName(PackageNamespace(""), "chat")
     getlocal1
     callpropvoid        QName(PackageNamespace(""), "noticeEvent"), 1

L16:
     returnvoid
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "sendToLogFile") flag FINAL dispid 8
  method
   refid "Misc:g/class/sendToLogFile"
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "void")
   body
    maxstack 3
    localcount 2
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("net.theyak.util"), "Net")
     getlex              QName(PackageNamespace("Misc"), "g")
     getproperty         QName(PackageNamespace(""), "phpPath")
     pushstring          "log.php?log="
     add
     getlocal1
     add
     callpropvoid        QName(PackageNamespace(""), "callServer"), 1

     returnvoid
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "clean_answer") flag FINAL dispid 9
  method
   refid "Misc:g/class/clean_answer"
   param QName(PackageNamespace(""), "String")
   returns QName(PackageNamespace(""), "String")
   body
    maxstack 2
    localcount 2
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     getlex              QName(PackageNamespace("com.adobe.utils"), "StringUtil")
     getlocal1
     callproperty        QName(PackageNamespace(""), "trim"), 1
     coerce_s
     setlocal1

     getlocal1
     pushstring          "$"
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "split"), 1
     pushstring          ""
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "join"), 1
     coerce_s
     setlocal1

     getlex              QName(PackageNamespace("Misc"), "g")
     getlocal1
     callproperty        QName(PackageNamespace(""), "convert_fraction"), 1
     coerce_s
     setlocal1

     getlocal1
     pushstring          "\\"
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "split"), 1
     pushstring          ""
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "join"), 1
     coerce_s
     setlocal1

     getlocal1
     pushstring          "{"
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "split"), 1
     pushstring          ""
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "join"), 1
     coerce_s
     setlocal1

     getlocal1
     pushstring          "}"
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "split"), 1
     pushstring          ""
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "join"), 1
     coerce_s
     setlocal1

     getlocal1
     pushstring          ","
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "split"), 1
     pushstring          ""
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "join"), 1
     coerce_s
     setlocal1

     getlocal1
     pushstring          " "
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "split"), 1
     pushstring          ""
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "join"), 1
     coerce_s
     setlocal1

     getlocal1
     pushbyte            0
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "charAt"), 1
     pushstring          "."
     ifne                L64

     pushstring          "0"
     getlocal1
     add
     coerce_s
     setlocal1

L64:
     getlocal1
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "toLowerCase"), 0
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
 trait method QName(PackageNamespace(""), "convert_fraction") flag FINAL dispid 10
  method
   refid "Misc:g/class/convert_fraction"
   param QName(PackageNamespace(""), "String")
   body
    maxstack 3
    localcount 6
    initscopedepth 3
    maxscopedepth 4
    code
     getlocal0
     pushscope

     pushnull
     coerce              QName(PackageNamespace(""), "Array")
     setlocal2

     pushnull
     coerce              QName(PackageNamespace(""), "RegExp")
     setlocal3

     pushstring          ""
     setlocal            4

     getlocal1
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "toLowerCase"), 0
     coerce_s
     setlocal1

     getlocal1
     pushstring          "\\frac"
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "indexOf"), 1
     convert_i
     dup
     setlocal            5

     pushbyte            0
     ifnlt               L27

     getlocal1
     pushstring          "\\dfrac"
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "indexOf"), 1
     convert_i
     setlocal            5

L27:
     getlocal            5
     pushbyte            -1
     ifngt               L198

     getlocal            5
     pushbyte            0
     ifngt               L62

     getlocal1
     pushbyte            0
     getlocal            5
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "substr"), 2
     coerce_s
     setlocal            4

     getlex              QName(PackageNamespace("com.adobe.utils"), "StringUtil")
     getlocal            4
     callproperty        QName(PackageNamespace(""), "trim"), 1
     coerce_s
     dup
     setlocal            4

     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            1
     ifngt               L52

     getlocal            4
     pushstring          " "
     add
     setlocal            4

L52:
     getlocal1
     getlocal            5
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "substr"), 1
     coerce_s
     setlocal1

     getlex              QName(PackageNamespace("com.adobe.utils"), "StringUtil")
     getlocal1
     callproperty        QName(PackageNamespace(""), "trim"), 1
     coerce_s
     setlocal1

L62:
     getlex              QName(PackageNamespace(""), "RegExp")
     pushstring          "\\\\[d]?frac[\\s]?(\\d)(\\d)"
     construct           1
     coerce              QName(PackageNamespace(""), "RegExp")
     setlocal3

     getlocal1
     getlocal3
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "match"), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal2

     getlocal2
     pushnull
     equals
     not
     dup
     iffalse             L83

     pop
     getlocal2
     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            3
     equals
L83:
     iffalse             L96

     getlocal            4
     getlocal2
     pushbyte            1
     getproperty         MultinameL([PrivateNamespace(null, "Misc:g/class"), PackageNamespace(""), PackageNamespace("Misc"), PackageNamespace("net.theyak.util"), PackageNamespace("com.adobe.utils"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "Misc:g/class/convert_fraction"), PackageInternalNs("Misc"), PackageNamespace("net.theyak.net"), ProtectedNamespace("Misc:g"), StaticProtectedNs("Misc:g"), StaticProtectedNs("Object")])
     add
     pushstring          "/"
     add
     getlocal2
     pushbyte            2
     getproperty         MultinameL([PrivateNamespace(null, "Misc:g/class"), PackageNamespace(""), PackageNamespace("Misc"), PackageNamespace("net.theyak.util"), PackageNamespace("com.adobe.utils"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "Misc:g/class/convert_fraction"), PackageInternalNs("Misc"), PackageNamespace("net.theyak.net"), ProtectedNamespace("Misc:g"), StaticProtectedNs("Misc:g"), StaticProtectedNs("Object")])
     add
     returnvalue

L96:
     getlex              QName(PackageNamespace(""), "RegExp")
     pushstring          "\\\\[d]?frac[\\s]?\\{([^\\}]*)\\}\\{([^\\}]*)\\}"
     construct           1
     coerce              QName(PackageNamespace(""), "RegExp")
     setlocal3

     getlocal1
     getlocal3
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "match"), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal2

     getlocal2
     pushnull
     equals
     not
     dup
     iffalse             L117

     pop
     getlocal2
     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            3
     equals
L117:
     iffalse             L130

     getlocal            4
     getlocal2
     pushbyte            1
     getproperty         MultinameL([PrivateNamespace(null, "Misc:g/class"), PackageNamespace(""), PackageNamespace("Misc"), PackageNamespace("net.theyak.util"), PackageNamespace("com.adobe.utils"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "Misc:g/class/convert_fraction"), PackageInternalNs("Misc"), PackageNamespace("net.theyak.net"), ProtectedNamespace("Misc:g"), StaticProtectedNs("Misc:g"), StaticProtectedNs("Object")])
     add
     pushstring          "/"
     add
     getlocal2
     pushbyte            2
     getproperty         MultinameL([PrivateNamespace(null, "Misc:g/class"), PackageNamespace(""), PackageNamespace("Misc"), PackageNamespace("net.theyak.util"), PackageNamespace("com.adobe.utils"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "Misc:g/class/convert_fraction"), PackageInternalNs("Misc"), PackageNamespace("net.theyak.net"), ProtectedNamespace("Misc:g"), StaticProtectedNs("Misc:g"), StaticProtectedNs("Object")])
     add
     returnvalue

L130:
     getlex              QName(PackageNamespace(""), "RegExp")
     pushstring          "\\\\[d]?frac[\\s]?(\\d)\\{([^\\}]*)\\}"
     construct           1
     coerce              QName(PackageNamespace(""), "RegExp")
     setlocal3

     getlocal1
     getlocal3
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "match"), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal2

     getlocal2
     pushnull
     equals
     not
     dup
     iffalse             L151

     pop
     getlocal2
     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            3
     equals
L151:
     iffalse             L164

     getlocal            4
     getlocal2
     pushbyte            1
     getproperty         MultinameL([PrivateNamespace(null, "Misc:g/class"), PackageNamespace(""), PackageNamespace("Misc"), PackageNamespace("net.theyak.util"), PackageNamespace("com.adobe.utils"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "Misc:g/class/convert_fraction"), PackageInternalNs("Misc"), PackageNamespace("net.theyak.net"), ProtectedNamespace("Misc:g"), StaticProtectedNs("Misc:g"), StaticProtectedNs("Object")])
     add
     pushstring          "/"
     add
     getlocal2
     pushbyte            2
     getproperty         MultinameL([PrivateNamespace(null, "Misc:g/class"), PackageNamespace(""), PackageNamespace("Misc"), PackageNamespace("net.theyak.util"), PackageNamespace("com.adobe.utils"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "Misc:g/class/convert_fraction"), PackageInternalNs("Misc"), PackageNamespace("net.theyak.net"), ProtectedNamespace("Misc:g"), StaticProtectedNs("Misc:g"), StaticProtectedNs("Object")])
     add
     returnvalue

L164:
     getlex              QName(PackageNamespace(""), "RegExp")
     pushstring          "\\\\[d]?frac[\\s]?\\{([^\\}]*)\\}(\\d)"
     construct           1
     coerce              QName(PackageNamespace(""), "RegExp")
     setlocal3

     getlocal1
     getlocal3
     callproperty        QName(Namespace("http://adobe.com/AS3/2006/builtin"), "match"), 1
     coerce              QName(PackageNamespace(""), "Array")
     setlocal2

     getlocal2
     pushnull
     equals
     not
     dup
     iffalse             L185

     pop
     getlocal2
     getproperty         QName(PackageNamespace(""), "length")
     pushbyte            3
     equals
L185:
     iffalse             L198

     getlocal            4
     getlocal2
     pushbyte            1
     getproperty         MultinameL([PrivateNamespace(null, "Misc:g/class"), PackageNamespace(""), PackageNamespace("Misc"), PackageNamespace("net.theyak.util"), PackageNamespace("com.adobe.utils"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "Misc:g/class/convert_fraction"), PackageInternalNs("Misc"), PackageNamespace("net.theyak.net"), ProtectedNamespace("Misc:g"), StaticProtectedNs("Misc:g"), StaticProtectedNs("Object")])
     add
     pushstring          "/"
     add
     getlocal2
     pushbyte            2
     getproperty         MultinameL([PrivateNamespace(null, "Misc:g/class"), PackageNamespace(""), PackageNamespace("Misc"), PackageNamespace("net.theyak.util"), PackageNamespace("com.adobe.utils"), Namespace("http://adobe.com/AS3/2006/builtin"), PrivateNamespace(null, "Misc:g/class/convert_fraction"), PackageInternalNs("Misc"), PackageNamespace("net.theyak.net"), ProtectedNamespace("Misc:g"), StaticProtectedNs("Misc:g"), StaticProtectedNs("Object")])
     add
     returnvalue

L198:
     getlocal1
     returnvalue
    end ; code
   end ; body
  end ; method
 end ; trait
end ; class
